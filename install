#!/bin/bash
# Serverinstall for debian machines v1.5
# does:
# - apt update && upgrade && install things
# - tzdata && locales
# - dump motd
# - test for user martin (adduser martin w/o pw, sshkey)
# - new root pw
# - new hostname
# - sshd: key only login, port 222, security
# - profilebanner
# - aliases
# - bash colors (green user/purple root)
# - no-pw sudo for apt for martin
# - warning check sshd manually
# - test logins (user/root)
# - remove default ubuntu/pi users
# - custom wsl things

if [ "$UID" -gt 0 ]; then
     echo "Bitte als root ausführen!"
     exit 1
fi

# INSTALL THINGS
echo -e "\e[45mUpdating\e[0m"
apt update && apt upgrade -y
echo -e "\e[45mInstalling dnsutils+screen+curl\e[0m"
apt install nano dnsutils screen curl ca-certificates apt-transport-https dialog htop fd-find ncdu tldr ack pydf zip sudo prettyping -y

# USER MARTIN
echo -e "\e[45muser martin\e[0m"
if id "martin" >/dev/null 2>&1; then
        echo -e "\e[45muser martin still exists\e[0m"
else
        adduser --disabled-password --gecos "" martin
fi
echo -e "\e[45msshkey for martin\e[0m"
mkdir /home/martin/.ssh && echo "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIC1ppsf3ClLh/HCQzLjr/S2CyuPZsTngFyiqZb0jd9AI martin@DESKTOP" >> /home/martin/.ssh/authorized_keys && chown -R martin.martin /home/martin/.ssh
echo -e "\e[45mupdates-sudo\e[0m"
read -r "Copy: martin  ALL=(ALL) NOPASSWD: $(which apt)"
visudo

# ROOT
echo -e "\e[45mnew root pass\e[0m"
passwd root

# SYSTEM
echo -e "\e[45mtzdata && locale\e[0m"
dpkg-reconfigure tzdata && dpkg-reconfigure locales
echo -e "\e[45mDumping modt\e[0m"
echo "" > /etc/motd
echo -e "\e[45mnew hostname\e[0m"
read -r 'New Hostname: ' hostname
hostname "$hostname"
echo "$HOSTNAME" > /etc/hostname
echo -e "\e[45mAliases & Profile-Banner\e[0m"
{
        echo ""
        echo "################################"
        echo "# Hallo ${USER}, $HOSTNAME ab hier ;) #"
        echo "################################"
        echo "alias ll='ls -la --color=auto'"
        echo "alias checkupdates='sudo apt update && sudo apt -y upgrade'"
        echo "alias ping='prettyping --nolegend --nounicode'"
        echo "alias top='htop'"
        echo "alias find='fdfind'"
        echo "alias du='ncdu --color dark -rr'"
        echo "alias df='pydf'"
} >> /etc/profile
source /etc/profile
HISTCONTROL="ignorespace:erasedups"
export HISTCONTROL
echo -e "\e[45mpurple root bash prompt\e[0m"
echo "PS1='${debian_chroot:+($debian_chroot)}\[\033[1;35m\]\u@\h\[\033[00m\]:\[\033[1;30m\]\w\[\033[00m\]\$ '" >>/root/.bashrc
source /root/.bashrc

# SSHD
echo -e "\e[45mssh key only, port 222 && restart\e[0m"
sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config
echo "AuthenticationMethods publickey" >> /etc/ssh/sshd_config
sed -i 's/#HostKey /etc/ssh/ssh_host_ed25519_key/HostKey /etc/ssh/ssh_host_ed25519_key/g' /etc/ssh/sshd_config
echo "KexAlgorithms curve25519-sha256 curve25519-sha256@libssh.org" >> /etc/ssh/sshd_config
echo "MACs hmac-sha2-512-etm@openssh.com" >> /etc/ssh/sshd_config
sed -i 's/#Port 22/Port 222/g' /etc/ssh/sshd_config && service sshd restart
echo -e "\e[93mSSHD_CONFIG CHECKEN - PasswordAuthentication\e[0m"
read -r "Mache eine zweite Shell auf und schau ob du dich anmelden kannst. Im nächsten Schritt lösche ich alle USER, die per default installiert sind. Enter für weiter."
echo -e "\e[93mUser löschen - pi/ubuntu\e[0m"
deluser --remove-home pi
deluser --remove-home ubuntu

# WSL
echo -n "WSL? (.ssh/config+mount usb) [1] yes / [0] no"
read YN
if [[ $YN == 1 ]]
then
  mkdir ~/usb && echo "sudo mount -t drvfs i: ~/usb" >> ~/.bashrc && sudo mount -t drvfs i: ~/usb && touch ~/.ssh/config && cat ~/usb/configs/ssh-config.txt > ~/.ssh/config
else
    echo "selected nope."
fi
echo -e "\e[42mDone, hf.\e[0m"
